# .github/workflows/schedule.yml

name: Daily Yongin Weather Report

on:
  # 1. 스케줄 설정
  schedule:
    # cron 문법을 사용. UTC 기준 매일 23시 (한국 시간 오전 8시)에 실행
    - cron: '0 23 * * *'
  
  # 2. 수동 실행 설정 (테스트용)
  # GitHub Actions 탭에서 수동으로 실행할 수 있는 버튼을 추가합니다.
  workflow_dispatch:

jobs:
  run-weather-bot:
    runs-on: ubuntu-latest # 가상 컴퓨터 환경 (리눅스)
    steps:
      # 1단계: 내 코드를 가상 컴퓨터로 가져오기
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # HW1 폴더 안의 파일만 가져오도록 설정
          path: main

      # 2단계: 파이썬 설치하기
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # 3단계: 필요한 라이브러리 설치하기
      - name: Install dependencies
        run: pip install requests
      
      # 4단계 (가장 중요!): GitHub Secret에 저장된 토큰 정보로 kakao_tokens.json 파일 생성
      - name: Create kakao_tokens.json from Secret
        if: ${{ secrets.KAKAO_TOKENS_JSON != '' }}
        working-directory: ./main/HW1 # 작업 위치를 HW1 폴더로 지정
        run: echo "${{ secrets.KAKAO_TOKENS_JSON }}" > kakao_tokens.json
        
      # 5단계: 파이썬 스크립트 실행하기
      - name: Run Python Script
        working-directory: ./main/HW1 # 작업 위치를 HW1 폴더로 지정
        run: python main.py
        env:
          # GitHub Secrets에 저장한 값들을 환경 변수로 주입
          OPENWEATHERMAP_API_KEY: ${{ secrets.OWM_API_KEY }}
          KAKAO_REST_API_KEY: ${{ secrets.KAKAO_REST_API_KEY }}
          CI: true # GitHub Actions 환경임을 알리는 변수
```

**2단계: GitHub Secrets 설정하기 (비밀번호 보관)**

이제 API 키와 같은 민감한 정보들을 GitHub의 안전한 '비밀 금고'에 넣을 차례입니다.

1.  `DeepLearning_HW` 프로젝트의 GitHub 저장소 페이지로 이동하세요.
2.  오른쪽 위 **[Settings]** 탭을 클릭하세요.
3.  왼쪽 메뉴에서 **[Secrets and variables]** > **[Actions]** 로 이동하세요.
4.  오른쪽에 있는 **[New repository secret]** 버튼을 눌러, 아래 **3개의 Secret**을 차례대로 만들어주세요.

    

    * **Secret 1**
        * **Name**: `OWM_API_KEY`
        * **Value**: 본인의 OpenWeatherMap API 키 (`3196...`)를 붙여넣으세요.

    * **Secret 2**
        * **Name**: `KAKAO_REST_API_KEY`
        * **Value**: 본인의 카카오 REST API 키 (`1cfe...`)를 붙여넣으세요.

    * **Secret 3 (가장 중요!)**
        * **Name**: `KAKAO_TOKENS_JSON`
        * **Value**:
            * 내 컴퓨터의 `HW1` 폴더 안에 있는 **`kakao_tokens.json` 파일**을 여세요.
            * 파일 안의 `{ "access_token": "...", ... }` 와 같은 **내용 전체를 복사**해서 이곳에 붙여넣으세요. 이 정보가 있어야 GitHub에서 매번 로그인할 필요가 없습니다.

**3단계: 최종 코드 push 하기**

이제 내 컴퓨터에서 만든 `.github` 폴더와 그 안의 `schedule.yml` 파일을 GitHub에 올리면 모든 설정이 끝납니다.

1.  **터미널**을 열어 `DeepLearning_HW` 폴더로 이동하세요.
2.  아래 명령어들을 순서대로 실행하세요.
    ```powershell
    git add .
    git commit -m "Add: GitHub Actions for daily weather report"
    git push
    
