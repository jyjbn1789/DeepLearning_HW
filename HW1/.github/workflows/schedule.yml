# .github/workflows/schedule.yml

name: Daily Yongin Weather Report (HW1)

on:
  schedule:
    # KST(한국 시간) 기준 매일 오전 8시에 실행됩니다.
    - cron: '0 23 * * *'
  
  # Actions 탭에서 수동으로 테스트 실행이 가능합니다.
  workflow_dispatch:

jobs:
  run-weather-bot:
    runs-on: ubuntu-latest
    steps:
      - name: 1. Checkout repository code
        uses: actions/checkout@v4

      - name: 2. Set up Python environment
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: 3. Install dependencies for HW1
        # HW1 폴더 안에 있는 requirements.txt를 이용해 라이브러리를 설치합니다.
        run: pip install -r HW1/requirements.txt
      
      - name: 4. Run the Python script for HW1
        # 먼저 Secret에 저장된 토큰 정보로 HW1 폴더 안에 kakao_tokens.json 파일을 생성하고,
        # 이어서 HW1 폴더 안에 있는 main.py를 실행합니다.
        run: |
          echo "${{ secrets.KAKAO_TOKENS_JSON }}" > HW1/kakao_tokens.json
          python HW1/main.py
        env:
          OPENWEATHERMAP_API_KEY: ${{ secrets.OWM_API_KEY }}
          KAKAO_REST_API_KEY: ${{ secrets.KAKAO_REST_API_KEY }}
          CI: true
```

**3단계: 변경사항을 GitHub에 업로드하기**

이제 터미널을 열어 `DeepLearning_HW` 폴더로 이동한 뒤, 아래 명령어들을 순서대로 실행하면 모든 설정이 끝납니다.

```powershell
# 1. 모든 변경사항 (폴더 이동, 파일 수정 등)을 추가합니다.
git add .

# 2. "HW1 자동화 워크플로우 최종 수정" 이라는 메시지로 저장(커밋)합니다.
git commit -m "Finalize: Configure workflow to run within HW1 directory"

# 3. 변경사항을 GitHub 서버에 최종 업로드(푸시)합니다.
git push

