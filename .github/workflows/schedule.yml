    name: Daily Yongin Weather Report (HW1)
    
    on:
      schedule:
        - cron: '0 23 * * *'
      workflow_dispatch:
    
    jobs:
      run-weather-bot:
        runs-on: ubuntu-latest
        steps:
          - name: 1. Checkout repository code
            uses: actions/checkout@v4
    
          - name: 2. Set up Python
            uses: actions/setup-python@v5
            with:
              python-version: '3.11'
    
          - name: 3. Install dependencies for HW1
            run: pip install -r HW1/requirements.txt
          
          - name: 4. Create Kakao token file
            run: echo "${{ secrets.KAKAO_TOKENS_JSON }}" > HW1/kakao_tokens.json
            
          - name: 5. Run main script
            run: python HW1/main.py
            env:
              OPENWEATHERMAP_API_KEY: ${{ secrets.OWM_API_KEY }}
              KAKAO_REST_API_KEY: ${{ secrets.KAKAO_REST_API_KEY }}
              CI: true
    ```

**3단계: GitHub에 최종 업로드하기**

이제 내 컴퓨터의 모든 구조가 완벽해졌습니다. 이 최종본을 GitHub 서버에 올리면 모든 것이 끝납니다.

1.  수정한 `schedule.yml` 파일을 **저장**하세요.
2.  **터미널**에서 아래 명령어들을 순서대로 실행하세요.

    ```powershell
    # 1. 모든 변경사항 (폴더 삭제, 파일 생성 등)을 추가합니다.
    git add .

    # 2. "워크플로우 구조 최종 리셋 및 설정" 이라는 메시지로 저장(커밋)합니다.
    git commit -m "Reset and finalize workflow structure"

    # 3. 변경사항을 GitHub 서버에 최종 업로드(푸시)합니다.
    git push
    

