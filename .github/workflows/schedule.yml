name: Daily Yongin Weather Report (HW1)

on:
  workflow_dispatch: {}
  schedule:
    # 한국 08:00 = UTC 23:00 (전날)
    - cron: "0 23 * * *"

jobs:
  notify:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Debug env (where am I?)
        run: |
          pwd
          ls -al
          echo "Runner OS: $RUNNER_OS"

      - name: Install jq (needed for JSON parsing)
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Check secrets presence (masked)
        run: |
          test -n "${{ secrets.KAKAO_REST_API_KEY }}" || { echo "Missing KAKAO_REST_API_KEY"; exit 1; }
          test -n "${{ secrets.KAKAO_REFRESH_TOKEN }}" || { echo "Missing KAKAO_REFRESH_TOKEN"; exit 1; }
          echo "::add-mask::${{ secrets.KAKAO_REFRESH_TOKEN }}"
          echo "::add-mask::${{ secrets.KAKAO_REST_API_KEY }}"
          echo "Secrets look present."

      - name: Refresh Kakao access token
        id: kakao
        shell: bash
        run: |
          set -euo pipefail
          RESP=$(curl -s -X POST "https://kauth.kakao.com/oauth/token" \
            -H "Content-Type: application/x-www-form-urlencoded" \
            -d "grant_type=refresh_token" \
            -d "client_id=${{ secrets.KAKAO_REST_API_KEY }}" \
            -d "refresh_token=${{ secrets.KAKAO_REFRESH_TOKEN }}")
          echo "Token resp: $RESP"
          ACCESS_TOKEN=$(echo "$RESP" | jq -r '.access_token')
          if [ -z "${ACCESS_TOKEN:-}" ] || [ "${ACCESS_TOKEN}" = "null" ]; then
            echo "Failed to obtain access token from Kakao"
            exit 1
          fi
          echo "access_token=$ACCESS_TOKEN" >> $GITHUB_OUTPUT

      - name: Send KakaoTalk memo (to myself)
        shell: bash
        run: |
          set -euo pipefail
          HTTP_CODE=$(curl -s -o /tmp/resp.txt -w "%{http_code}" \
            -X POST "https://kapi.kakao.com/v2/api/talk/memo/default/send" \
            -H "Authorization: Bearer ${{ steps.kakao.outputs.access_token }}" \
            -H "Content-Type: application/x-www-form-urlencoded" \
            --data-urlencode 'template_object={
              "object_type":"text",
              "text":"HW1 자동 알림: 한국 08:00 실행 ✅",
              "link":{"web_url":"https://github.com/${{ github.repository }}/actions"}
            }')
          echo "HTTP_CODE=$HTTP_CODE"
          echo "RESP_BODY=$(cat /tmp/resp.txt)"
          # 200이 아니면 실패 처리
          [ "$HTTP_CODE" = "200" ] || exit 1

      # (선택) 실제 작업 디렉터리로 이동해 파이썬 등 실행
      # - name: Run HW1 script
      #   working-directory: DeepLearning_HW/HW1
      #   run: python main.py
